Project - Getting The Current User
    In a lot of apps there're times that we need the information about the Currently Loggin User
    For this we can GET /api/:id
     - But this approach is not good, because even it works we don't want that the user can send 'id' and even can send another 
       user 'id' and see information  that shouldn't be visible
    
    The approach used quite often is => GET /api/me
    With this APIendpoint the user will not send the user 'id', we get that 'id' from the JWT
    
    Steps in GET a/pi/me:
     - Pass the AuthorizationMiddleware
     - find the user by id and show the information that we select



-- routes/users.js

const auth = require('../middleware/auth'); // authorization
const config = require('config');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcrypt');
const _ = require('lodash');
const { User, validate } = require('../models/user');
const express = require('express');
const router = express.Router();
const mongoose = require('mongoose');

router.get('/me', auth, async (req,res) => {
    const user = await User.findById(req.user._id).select('-password');
    res.send(user);

});


router.post('/', async (req,res) => {
    const { error } = validate(req.body);
    if(error) return res.status(400).send(error.details[0].message);

    let user = await User.findOne({ email: req.body.email  });
    if (user) return res.status(400).send('User already registered');

    user = new User (_.pick(req.body, ['name', 'email', 'password']));
    const salt = await bcrypt.genSalt(10);  
    user.password = await bcrypt.hash(user.password, salt);
    await user.save();

    const token = user.generateAuthToken();
    res.header('x-auth-token', token).send(_.pick( user, ['_id', 'name', 'email']));
        
});

module.exports = router;