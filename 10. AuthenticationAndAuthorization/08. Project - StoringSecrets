Project - Storing Secrets in Environment Variables
    We used config package to store:
     - Configuration settings of our app in:
       - json files or environment variables

    Storing PrivateKey in an Environment Variable:
     - This is because we should never store Secrets in our codebase, otherwise these secrets are visible to 
       anyone who have access to our source code
     - Create a config/ folder
     - Create a config/default.json file
       - In this file we set simple JSON with several settings, but for now just one:
         - "jwtPrivateKey": ""
       - So this file is just a template for all the settings in our app
     - create a config/custom-environment-variables.json
       - In this file we specify the mapping between:
         - app settings & environment variables
           - "jwtPrivateKey": "vidly_jwtPrivateKey"  => prefix with the appName to end with different app settings without conflict overriding 
    
    Replace our Secret in auth.js
     - import config object => const config = require('config')
     - So we use:
       - config.get() method: We pass the name of the app settings
                              this name is what is defined in default.json file

    Ensure Environment Variable is SET!
     - We need to ensure that the environment variable is set when the app starts
       otherwise we have to terminate the app because the auth Endpoint can't function propertly!               
     - So on index.js we load the config package and with this object we evaluate that the jewPrivateKey 
       is defined.
       If it's not defined we show an error and then we need to Exit the Process:
       - Global process object: This object a method:
                                - .exit(): We pass a code:
                                           - 0: indicates sucess
                                           - x: anything but 0 means failer

    Defining Environment Variable:
     - In console ❯ $env:vidly_jwtPrivateKey="mySecureKey"
    

    
-- index.js
const config = require('config');
...
...


if (!config.get('jwtPrivateKey')){
    console.error('FATAL ERROR: jwtPrivateKey is not defined.');
    process.exit(1);
}

...



-- config/default.json
{
    "jwtPrivateKey": ""
}

-- config/custom-environment-variables.json
{
    "jwtPrivateKey": "vidly_jwtPrivateKey"
}


-- routes/auth.js
const config = require('config');
const jwt = require('jsonwebtoken');

router.post('/', async (req,res) => {
    ...
    ...
    const token = jwt.sign({ _id: user._id}, config.get('jwtPrivateKey'));
    ...
    ...
        
});
