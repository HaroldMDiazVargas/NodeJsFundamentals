Project - Restructure the app

    routes/ folder:
     - genres.js: All the routes for working with 'api/genres' API. Export the router object and remember to 
                  modify the paths in the HandlerRoutes functions
     - home.js: The route for working with the home page '/'; export the 'router' object
    
    index.js module:
     - Load the two previous modules; and then use:
       app.use(pathRoutesAPI, router)


-- routes/home.js

const express = require('express');
const router = express.Router();

router.get('/', (req,res) => {
    res.render('index', {title: 'My Express App', message: 'Hello'});
    
});

module.exports = router;





-- routes/genres.js

const express = require('express');
const router = express.Router();


const genres = [
    {id:1, name:'action'},
    {id:2, name:'thriller'},
    {id:3, name:'terror'},
    {id:4, name:'drama'}
];

router.get('/', (req,res) => {
    res.send(genres);
    
});

router.get('/:id', (req, res) => {

    const genre = genres.find(g => g.id === parseInt(req.params.id));
    if (!genre) return res.status(404).send('The genre with the given ID was not found')

    res.send(genre);

});
router.post('/', (req,res) => {
    
    const { error } = validateGenre(req.body);
    if(error) return res.status(400).send(error.details[0].message);

    const genre = {
        id: genres.length + 1,
        name: req.body.name
    }

    genres.push(genre);
    res.send(genre);
});

router.put('/:id', (req, res) => {
    const genre = genres.find(g => g.id === parseInt(req.params.id));
    if (!genre) return res.status(404).send('The genre with the given ID was not found')

    const { error } = validateGenre(req.body);
    if(error) return res.status(400).send(error.details[0].message);

    genre.name = req.body.name;
    res.send(genre);

});


router.delete('/:id', (req, res) => {
    const genre = genres.find(g => g.id === parseInt(req.params.id));
    if (!genre) return res.status(404).send('The genre with the given ID was not found')

    const index = genres.indexOf(genre);
    genres.splice(index, 1);

    res.send(genre);
});

function validateGenre(genre){
    const schema = Joi.object({
        name: Joi.string().min(3).required()
    });
    
    return schema.validate(genre);

}

module.exports = router;








-- index.js

const Joi = require('joi');
const genres = require('./routes/genres');
const home = require('./routes/home');
const express = require('express');
const app = express();

app.set('view engine', 'pug');

app.use(express.json());
app.use('/api/genres', genres);
app.use('/', home);



const port = process.env.PORT || 3000;
app.listen(port, () => {
    console.log(`Listening on port ${port}...`)
})


