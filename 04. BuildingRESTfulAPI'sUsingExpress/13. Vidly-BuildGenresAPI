Project Vidly - Genres API
    We want to create an API where the user can list(drop-down list) the genres about the movies 
    where can:
    - CREATE new  movies genres
    - READ existing movies genres
    - UPDATE existing movies genres
    - DELETE existing movies genres
    




--index.js
const Joi = require('joi');
const express = require('express');
const app = express();

// Managing List of Genres e.g action, terror, so on
app.use(express.json());

const genres = [
    {id:1, name:'action'},
    {id:2, name:'thriller'},
    {id:3, name:'terror'},
    {id:4, name:'drama'}
];

app.get('/vidly.com/api/genres', (req,res) => {
    res.send(genres);
    
});

app.get('/vidly.com/api/genres/:id', (req, res) => {

    const genre = genres.find(g => g.id === parseInt(req.params.id));
    if (!genre) return res.status(404).send('The genre with the given ID was not found')

    res.send(genre);

});
app.post('/vidly.com/api/genres', (req,res) => {
    
    const { error } = validateGenre(req.body);
    if(error) return res.status(400).send(error.details[0].message);

    const genre = {
        id: genres.length + 1,
        name: req.body.name
    }

    genres.push(genre);
    res.send(genre);
});

app.put('/vidly.com/api/genres/:id', (req, res) => {
    const genre = genres.find(g => g.id === parseInt(req.params.id));
    if (!genre) return res.status(404).send('The genre with the given ID was not found')

    const { error } = validateGenre(req.body);
    if(error) return res.status(400).send(error.details[0].message);

    genre.name = req.body.name;
    res.send(genre);

});


app.delete('/vidly.com/api/genres/:id', (req, res) => {
    const genre = genres.find(g => g.id === parseInt(req.params.id));
    if (!genre) return res.status(404).send('The genre with the given ID was not found')

    const index = genres.indexOf(genre);
    genres.splice(index, 1);

    res.send(genre);
});



const port = process.env.PORT || 3000;
app.listen(port, () => {
    console.log(`Listening on port ${port}...`)
})

function validateGenre(genre){
    const schema = Joi.object({
        name: Joi.string().min(3).required()
    });
    
    return schema.validate(genre);

}


