Events Module
    The concept of Event is one of the core concepts in Node. A lot of Nodes Core Functionalities is based on this 
    concept of Events.
    Event: Is a signal that indicates that something has happened in our app
           e.g In node we have a class called:
               - HTTP used to build a web server; so we listen at a given port and everytime we receive a request
                 on that port that HTTP class raises an event. 
                 Our job is to respond to that event, which basically involves:
                 - reading that request and returning the right response

    Several classes in Node raises different classes of events and in our code we may interesting to respond to that 
    events.

    Events Module:
        In documentation  https://nodejs.org/dist/latest-v16.x/docs/api/events.html
        we can see:
        - One Class:EventEmitter: One of the core building blocks of Node and a lot of classes are based on this 
                                  EventEmitter.
    
    Load Module:
        When we load using require('events') function, we get:
        - EventEmitter class: We have properties/methods we see in doc:
                              - emitter.listenerCount()
                              - emitter.getMaxListeners()
                              - ...
        But in order to use EventEmitter class we need to create an instance(object) of this class:
            const emitter = new EventEmitter()
            This emitter(object) has a bunch of methods(all that we saw in doc). Most of the time we use only two
            of these methods:
            - emitter.emit(nameOfEvent): Used to raise/produce an event
            - emitter.addListener(nameOfEvent, Callback/Listener): Used to register a listener. A listener is a function
                                                                  that will be call when that event is raised. 
                                                                  We have an ALIAS for this method => emitter.on 
                                                                  (In JQUERY is used)


        
    Order matters:
     - If we register listener after the event happend(.emit) nothing will happen. Because when we call the emitter.emit() 
       the emitter object iterated over all the registered listeners and calls them Synchronously


--app.js
const EventEmitter = require('events');
const emitter = new EventEmitter();

emitter.on('messageLogged', function(){
    console.log('Listener called'); 
});

emitter.emit('messageLogged');

--Output:
Listener Called

